{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","category","target","value","categories","type","onChange","getGifs","a","url","encodeURI","fetch","response","json","data","map","gif","id","title","images","downsized_medium","useFetchGifs","gifs","loading","state","setState","useEffect","then","GifGridItem","className","src","alt","GifGrid","key","GifApp","categorys","onClick","ReactDOM","render","document","getElementById"],"mappings":"yKAEe,SAASA,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,cAAgB,EAEbC,mBAAS,IAFI,mBAE1CC,EAF0C,KAE9BC,EAF8B,KAcjD,OACI,mCACA,sBAAMC,SAVW,SAACC,GAElB,GADAA,EAAEC,iBACuB,IAAtBJ,EAAWK,OAAd,CACA,IAAMC,EAAWH,EAAEI,OAAO,GAAGC,MAC7BV,GAAc,SAAAW,GAAU,OAAIH,GAAJ,mBAAiBG,OACzCR,EAAc,MAKd,SACI,uBAAOS,KAAK,OAAOF,MAAOR,EAAYW,SAbvB,SAACR,GAAD,OAAKF,EAAcE,EAAEI,OAAOC,c,mCCMxCI,EAZF,uCAAG,WAAON,GAAP,qBAAAO,EAAA,6DACNC,EADM,0FACoFC,UAAUT,GAD9F,sBAEWU,MAAMF,GAFjB,cAENG,EAFM,gBAGWA,EAASC,OAHpB,uBAGJC,EAHI,EAGJA,KAHI,kBAKLA,EAAKC,KAAI,SAAAC,GAAG,YAAK,CACpBC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,SAR1B,2CAAH,sDCoBEY,EAjBO,SAACpB,GAAY,IAAD,EACJP,mBAAS,CAC/B4B,KAAM,GACNC,SAAS,IAHiB,mBACvBC,EADuB,KAChBC,EADgB,KAc9B,OARAC,qBAAU,WACNnB,EAAQN,GACH0B,MAAK,SAAAL,GAAI,OAAIG,EAAS,CACnBH,OACAC,SAAS,SAElB,CAACtB,IAEGuB,GCfEI,EAAc,SAAC,GAAqB,EAApBX,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAEpC,OACI,sBAAKoB,UAAU,yCAAf,UACI,qBAAKC,IAAKrB,EAAKsB,IAAKb,IACpB,4BAAIA,QCHD,SAASc,EAAT,GAA8B,IAAZ/B,EAAW,EAAXA,SAAW,EAEhBoB,EAAapB,GAA9BqB,EAFiC,EAEjCA,KAAMC,EAF2B,EAE3BA,QAEb,OACI,qCACI,oBAAIM,UAAU,oCAAd,SAAmD5B,IAClDsB,GAAU,mBAAGM,UAAU,mCAAb,wBACX,qBAAKA,UAAU,YAAf,SAEQP,EAAKP,KAAI,SAAAC,GAAG,OAAI,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBiB,IAAKjB,EAAIC,cCVpD,SAASiB,IAAU,IAAD,EAEMxC,mBAAS,CACxC,cAHyB,mBAEtByC,EAFsB,KAEX1C,EAFW,KAQ7B,OACI,qCACI,yCACA,uBACA,wBAAQ2C,QAAS,WANP,IAACnC,IAMqB,MANRR,GAAc,SAAAW,GAAU,4BAAOA,GAAP,CAAmBH,QAMnE,qBACA,cAACT,EAAD,CAAaC,cAAeA,IAC5B,6BAEQ0C,EAAUpB,KAAI,SAAAd,GAAQ,OAAI,cAAC+B,EAAD,CAAS/B,SAAUA,GAAeA,W,MCfhFoC,IAASC,OACL,cAACJ,EAAD,IACFK,SAASC,eAAe,W","file":"static/js/main.9d650cc3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function AddCategory({setCategories}) {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    const handleOnChange = (e)=>setInputValue(e.target.value)\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n        if(inputValue.length === 0) return\r\n        const category = e.target[0].value\r\n        setCategories(categories =>[category, ...categories])\r\n        setInputValue('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleOnChange}/>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n","const getGifs = async (category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=AKSo57rdHsmKzson4NWeSg1NL9VB19Vz&q=${ encodeURI(category) }&limit=20`\r\n    const response = await fetch(url)\r\n    const { data } = await response.json()\r\n\r\n    return data.map(gif => ({\r\n        id: gif.id,\r\n        title: gif.title,\r\n        url: gif.images?.downsized_medium.url\r\n    }))\r\n}\r\n\r\nexport default getGifs","import { useState, useEffect } from 'react'\r\nimport getGifs from '../helpers/getGifs'\r\n\r\nconst useFetchGifs  = (category)=>{\r\n    const [state, setState] = useState({\r\n        gifs: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(gifs => setState({\r\n                gifs,\r\n                loading: false\r\n            }))\r\n    }, [category])\r\n\r\n    return state\r\n}\r\n\r\nexport default useFetchGifs","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport default function GifGrid({category}) {\r\n\r\n    const {gifs, loading} = useFetchGifs(category)\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading &&<p className=\"animate__animated animate__flash\">loading...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    gifs.map(gif => <GifGridItem {...gif} key={gif.id}></GifGridItem>)\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from './components/GifGrid';\r\n\r\nexport default function GifApp() {\r\n\r\n    const [categorys, setCategories] = useState([\r\n        \"one punch\"\r\n    ])\r\n\r\n    const handleAdd = (category) => setCategories(categories =>[...categories, category])\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif App</h2>\r\n            <hr/>\r\n            <button onClick={()=>{handleAdd(\"aot\")}}>Agregar</button>\r\n            <AddCategory setCategories={setCategories}></AddCategory>\r\n            <ol>\r\n                {\r\n                    categorys.map(category => <GifGrid category={category} key={category}></GifGrid>)\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifApp from './GifApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}